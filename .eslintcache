[{"D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\index.js":"1","D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\reportWebVitals.js":"2","D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\App.js":"3","D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\Nav\\Nav.js":"4","D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\Main\\Main.js":"5","D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\Context\\DataContext.js":"6","D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\Month\\Month.js":"7","D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\Day\\Day.js":"8","D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\Year\\Year.js":"9","D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\Test\\Dias.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":467,"mtime":1617468844908,"results":"14","hashOfConfig":"12"},{"size":786,"mtime":1617155962171,"results":"15","hashOfConfig":"12"},{"size":1254,"mtime":1614033946450,"results":"16","hashOfConfig":"12"},{"size":3412,"mtime":1617465289373,"results":"17","hashOfConfig":"12"},{"size":1457,"mtime":1617465553982,"results":"18","hashOfConfig":"12"},{"size":512,"mtime":1617469910484,"results":"19","hashOfConfig":"12"},{"size":246,"mtime":1613270831563,"results":"20","hashOfConfig":"12"},{"size":2506,"mtime":1617154835434,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"13062rw",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"24"},"D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\index.js",[],["51","52"],"D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\reportWebVitals.js",[],"D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\App.js",["53"],"import React from 'react';\nimport Main from './Main/Main';\nimport Nav from './Nav/Nav';\nimport './App.css';\nimport { DataProvider } from './Context/DataContext';\n\nimport Test from './Test/Dias';\n\nfunction App() {\n\n  return (\n    <div className=\"app-container\">\n      {\n        // <Test />\n      }\n\n      <DataProvider>\n        <Nav />\n        <header className=\"app-header\">2020</header>\n        <Main />\n      </DataProvider>\n\n    </div>\n  );\n}\n\nexport default App;\n","D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\Nav\\Nav.js",["54"],"import React, { useContext } from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport './nav.css';\r\nimport { DataContext } from '../Context/DataContext';\r\nimport Month from '../Month/Month';\r\n\r\nconst Nav = () => {\r\n\r\n  const { setDisplay, meses, setSelectedMonth } = useContext(DataContext);\r\n\r\n  const listMeses = meses.map((mes, index) =>\r\n    <li\r\n      className='nav-li'\r\n      onClick={() => {\r\n        setSelectedMonth(index);\r\n        setDisplay('mes')\r\n      }}\r\n      key={index}\r\n      value={mes}>\r\n      {mes}\r\n    </li>\r\n    );\r\n  // lista de meses que siempre lleva todos los meses, onclick actualiza el selectedMonths\r\n\r\n  return (\r\n  <nav className='app-nav'>\r\n    <ul className='nav-ul'>\r\n      {listMeses}\r\n    </ul>\r\n  </nav>\r\n)\r\n}\r\n\r\nexport default Nav;\r\n","D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\Main\\Main.js",["55","56","57"],"import React, { useContext } from 'react';\r\n// import { BrowserWeb as Router, Route } from 'react-router-dom';\r\nimport './main.css';\r\nimport { DataContext } from '../Context/DataContext';\r\nimport Day from '../Day/Day';\r\nimport Month from '../Month/Month';\r\nimport Year from '../Year/Year';\r\n\r\nconst Main = () => {\r\n\r\n  const { display, meses, selectedMonth, setSelectedMonth } = useContext(DataContext)\r\n\r\n  const listMeses = meses.map((mes, index) =>\r\n    <div className='month' key={index}>{mes}</div>\r\n   );\r\n\r\n  /*const changeMonth = (action) => {\r\n    console.log(action);\r\n  }*/\r\n//  listMeses.map(div => console.log(div.props.children));\r\n\r\n  return (\r\n    <main  className=\"app-main\">\r\n\r\n      {/*<Router>\r\n        <Route path='/' exact component={Month} />\r\n        <Route path='/day' exact component={Day} />\r\n      </Router>*/}\r\n      {/*  <button className='button home-button' onClick={() => setSelectedMonth([...meses])}>Home</button>\r\n      //  <button className='button next-button' value='next' onClick={() => changeMonth('next')}>Next</button>\r\n      //  <div className='months-container'>{listMeses}</div>*/}\r\n      {display === 'mes' ? <Month /> : display === 'dia' ? <Day /> : <Year />}\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;\r\n","D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\Context\\DataContext.js",["58","59","60"],"import React, { useState, createContext } from 'react';\r\n\r\n// const dayNumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];\r\n\r\nconst dayNames = ['DOMINGO', 'LUNES', 'MARTES', 'MIERCOLES', 'JUEVES',\r\n 'VIERNES', 'SABADO']\r\n\r\nconst meses = ['ENERO', 'FEBRERO', 'MARZO',\r\n 'ABRIL', 'MAYO', 'JUNIO', 'JULIO', 'AGOSTO',\r\n 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE'];\r\n\r\nconst DataContext = createContext({});\r\n\r\nconst DataProvider = ({children}) => {\r\n\r\n  const dt = new Date();\r\n  const day = dt.getDay(); // indice de dia semanal  dom => 0\r\n  const currentDay = dt.getDate(); // numero del mes => 28\r\n  const month = dt.getMonth(); // indice del mes (0-index) marzo => 2\r\n  const year = dt.getFullYear(); // numero de año => (2021)\r\n\r\n  const [ selectedYear, setSelectedYear ] = useState(year); // numero de año seleccionado\r\n  const [ selectedMonth, setSelectedMonth ] = useState(month); // indice del mes seleccionado\r\n  const [ selectedDate, setSelectedDate ] = useState(currentDay);  // numero de dia seleccionado en el mes\r\n\r\n  const [ display, setDisplay ] = useState('mes');\r\n\r\n  const firstDayOfMonth = new Date(selectedYear, selectedMonth);\r\n  const paddingDays = firstDayOfMonth.getDay(); //\r\n\r\n  const daysInMonth = new Date(selectedYear, selectedMonth + 1, 0).getDate(); // numero de dias del mes\r\n  // const dayNumbers = [...Array(paddingDays + daysInMonth).keys()]; // array de numeros desde el 1 hasta el ultimo dia del mes seleccionado\r\n\r\n  const lastDayOfPrevMonth = new Date(selectedYear, selectedMonth, 0).getDate();\r\n\r\n  const dayNumbers = [];\r\n  for (let i = 0, index = 0; i < paddingDays + daysInMonth; i++, index++) {\r\n    let day = i - paddingDays + 1;\r\n    if (index == 7) index = 0;\r\n    if (paddingDays > i) {\r\n      if (selectedMonth === 0) {\r\n        dayNumbers.push({\r\n          year: selectedYear - 1,\r\n          month: selectedMonth + 11,\r\n          day: lastDayOfPrevMonth + day,\r\n          dayName: dayNames[index],\r\n          padding: true\r\n        })\r\n      } else {\r\n        dayNumbers.push({\r\n          year: selectedYear,\r\n          month: selectedMonth - 1,\r\n          day: lastDayOfPrevMonth + day,\r\n          dayName: dayNames[index],\r\n          padding: true\r\n        })\r\n      }\r\n    } else {\r\n      dayNumbers.push({\r\n        year: selectedYear,\r\n        month: selectedMonth,\r\n        day: day,\r\n        dayName: dayNames[index],\r\n        padding: false\r\n      })\r\n    }\r\n  }\r\n\r\n  console.log(dayNumbers);\r\n\r\n  const changeMonth = (number) => {\r\n    switch (selectedMonth) {\r\n      case 0:\r\n        number === 1 ? setSelectedMonth(1) : setSelectedMonth(11);\r\n        break;\r\n      case 11:\r\n        number === 1 ? setSelectedMonth(0) : setSelectedMonth(10);\r\n        break;\r\n      default:\r\n        setSelectedMonth(selectedMonth + number);\r\n        break;\r\n    }\r\n    // function that when a next or previous button is clicked it changes the current selectedMonth\r\n  }\r\n\r\n  return (\r\n    <DataContext.Provider value={{\r\n      dayNames,\r\n      meses,\r\n      currentDay,\r\n      selectedMonth,\r\n      setSelectedMonth,\r\n      selectedDate,\r\n      setSelectedDate,\r\n      paddingDays,\r\n      daysInMonth,\r\n      dayNumbers,\r\n      lastDayOfPrevMonth,\r\n      changeMonth,\r\n      display,\r\n      setDisplay\r\n    }}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nexport {\r\n  DataContext,\r\n  DataProvider\r\n}\r\n","D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\Month\\Month.js",["61","62","63","64","65","66"],"import './month.css';\r\nimport React, { useContext, useState} from 'react';\r\nimport { DataContext } from '../Context/DataContext';\r\nimport Day from '../Day/Day';\r\n\r\nconst Month = () => {\r\n\r\n  const { setSelectedDate, setDisplay, dayNumbers, dayNames, meses, selectedMonth, setSelectedMonth, changeMonth, paddingDays, daysInMonth, currentDay, lastDayOfPrevMonth} = useContext(DataContext);\r\n\r\n  const listOfDayNames = dayNames.map((day, index) =>\r\n    <li\r\n      className='month-li'\r\n      key={index}\r\n      value={day}>\r\n      {day}\r\n    </li>\r\n    );\r\n\r\n  const listOfDayNumbers = dayNumbers.map((date, index) => {\r\n    return (\r\n      <div\r\n        className={date.padding? 'month-day padding' : 'month-day'}\r\n        key={index}\r\n        onClick={() => {setSelectedDate(date.day); setDisplay('dia')}}\r\n        >\r\n        <Day dayName={date.dayName} day={date.day} miniatura={true} />\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className='month-container'>\r\n      <nav className='month-nav'>\r\n        <h1>HOME</h1>\r\n        <button onClick={() => changeMonth(-1)}>{'<'}</button>\r\n        <h1>{meses[selectedMonth]}</h1>\r\n        <button onClick={() => changeMonth(1)}>{'>'}</button>\r\n      </nav>\r\n      <main className='month-main'>\r\n        <ul className='month-ul'>\r\n          {listOfDayNames}\r\n        </ul>\r\n        <div className='month-days-container'>{listOfDayNumbers}</div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Month;\r\n","D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\Day\\Day.js",["67","68"],"import './day.css';\r\nimport React, { useContext, useState} from 'react';\r\nimport { DataContext } from '../Context/DataContext';\r\n\r\nconst Day = (props) => {\r\n\r\n  const { selectedDate, dayNames } = useContext(DataContext)\r\n\r\n  return (\r\n    <div className='day-div'>\r\n      {props.miniatura === true ?\r\n        <div>\r\n          <h1 className='day-number'>{props.day}</h1>\r\n          <div>TAREAS</div>\r\n        </div> :\r\n        <div>FECHA: {selectedDate}</div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Day;\r\n","D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\Year\\Year.js",["69","70","71"],"// import './year.css';\r\nimport React, { useContext, useState} from 'react';\r\nimport { DataContext } from '../Context/DataContext';\r\n\r\nconst Year = () => {\r\n\r\n  return (\r\n    <div>Hello from Year component</div>\r\n  );\r\n}\r\n\r\nexport default Year;\r\n","D:\\User D\\Documents\\atom_projects\\calendario-react\\src\\Test\\Dias.js",["72","73","74"],"import React, { useState } from 'react';\r\n\r\nconst Test = () => {\r\n\r\n  const dt = new Date();\r\n  const day = dt.getDay();\r\n  const currentDay = dt.getDate(); // numero del dia en el mes (1-31)\r\n  const month = dt.getMonth();\r\n  const year = dt.getFullYear();\r\n\r\n  const [ selectedYear, setSelectedYear ] = useState(year);\r\n  const [ selectedMonth, setSelectedMonth ] = useState(month);\r\n  const [ selectedDate, setSelectedDate ] = useState(currentDay);\r\n\r\n  const daysInMonth = new Date(selectedYear, selectedMonth + 1, 0).getDate(); // numero de dias del mes\r\n  const firstDayOfMonth = new Date(selectedYear, selectedMonth);\r\n  const lastDayOfMonth = new Date(selectedYear, selectedMonth + 1, 0);\r\n  const dayNames = ['domingo', 'lunes', 'martes', 'miercoles', 'jueves', 'viernes', 'sabado'];\r\n\r\n  const num_array = [...Array(daysInMonth + 1).keys()].slice(1); // array de numeros desde el 1 hasta el ultimo dia del mes\r\n  console.log(num_array);\r\n\r\n  const paddingDays = firstDayOfMonth.getDay(); // indice del primer dia del mes\r\n  console.log(paddingDays);\r\n\r\n  // const dateString = firstDayOfMonth.toLocaleDateString('es-ar', {\r\n  //   weekday: 'long',\r\n  //   day: 'numeric',\r\n  //   month: 'numeric',\r\n  //   year: 'numeric'\r\n  // }); // lunes, 1/3/2021\r\n  // console.log(dateString);\r\n\r\n  const display = num_array.map(index => (\r\n    <li key={index} style={{listStyleType: 'none'}}>{index}</li>\r\n  ));\r\n\r\n  const reset = () => {\r\n    setSelectedYear(year);\r\n    setSelectedMonth(month);\r\n    setSelectedDate(currentDay);\r\n  }\r\n\r\n  return (\r\n    <div style={{display: 'column', padding: '10px'}}>\r\n      <button onClick={() => reset()}>RESET</button>\r\n      <div style={{display: 'flex'}}>\r\n        <button onClick={() => setSelectedYear(selectedYear - 1)}>-</button>\r\n        <div>Year: {selectedYear}</div>\r\n        <button onClick={() => setSelectedYear(selectedYear + 1)}>+</button>\r\n      </div>\r\n      <div style={{display: 'flex'}}>\r\n        <button onClick={() => setSelectedMonth(selectedMonth - 1)}>-</button>\r\n        <div>Month: {selectedMonth}</div>\r\n        <button onClick={() => setSelectedMonth(selectedMonth + 1)}>+</button>\r\n      </div>\r\n      <div style={{display: 'flex'}}>\r\n        <button onClick={() => setSelectedDate(selectedDate - 1)}>-</button>\r\n        <div>Date: {selectedDate}</div>\r\n        <button onClick={() => setSelectedDate(selectedDate + 1)}>+</button>\r\n      </div>\r\n      <ul>\r\n        {display}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":7,"column":8,"nodeType":"81","messageId":"82","endLine":7,"endColumn":12},{"ruleId":"79","severity":1,"message":"83","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":13},{"ruleId":"79","severity":1,"message":"84","line":11,"column":27,"nodeType":"81","messageId":"82","endLine":11,"endColumn":40},{"ruleId":"79","severity":1,"message":"85","line":11,"column":42,"nodeType":"81","messageId":"82","endLine":11,"endColumn":58},{"ruleId":"79","severity":1,"message":"86","line":13,"column":9,"nodeType":"81","messageId":"82","endLine":13,"endColumn":18},{"ruleId":"79","severity":1,"message":"87","line":17,"column":9,"nodeType":"81","messageId":"82","endLine":17,"endColumn":12},{"ruleId":"79","severity":1,"message":"88","line":22,"column":25,"nodeType":"81","messageId":"82","endLine":22,"endColumn":40},{"ruleId":"89","severity":1,"message":"90","line":39,"column":15,"nodeType":"91","messageId":"92","endLine":39,"endColumn":17},{"ruleId":"79","severity":1,"message":"93","line":2,"column":29,"nodeType":"81","messageId":"82","endLine":2,"endColumn":37},{"ruleId":"79","severity":1,"message":"85","line":8,"column":84,"nodeType":"81","messageId":"82","endLine":8,"endColumn":100},{"ruleId":"79","severity":1,"message":"94","line":8,"column":115,"nodeType":"81","messageId":"82","endLine":8,"endColumn":126},{"ruleId":"79","severity":1,"message":"95","line":8,"column":128,"nodeType":"81","messageId":"82","endLine":8,"endColumn":139},{"ruleId":"79","severity":1,"message":"96","line":8,"column":141,"nodeType":"81","messageId":"82","endLine":8,"endColumn":151},{"ruleId":"79","severity":1,"message":"97","line":8,"column":153,"nodeType":"81","messageId":"82","endLine":8,"endColumn":171},{"ruleId":"79","severity":1,"message":"93","line":2,"column":29,"nodeType":"81","messageId":"82","endLine":2,"endColumn":37},{"ruleId":"79","severity":1,"message":"98","line":7,"column":25,"nodeType":"81","messageId":"82","endLine":7,"endColumn":33},{"ruleId":"79","severity":1,"message":"99","line":2,"column":17,"nodeType":"81","messageId":"82","endLine":2,"endColumn":27},{"ruleId":"79","severity":1,"message":"93","line":2,"column":29,"nodeType":"81","messageId":"82","endLine":2,"endColumn":37},{"ruleId":"79","severity":1,"message":"100","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":21},{"ruleId":"79","severity":1,"message":"87","line":6,"column":9,"nodeType":"81","messageId":"82","endLine":6,"endColumn":12},{"ruleId":"79","severity":1,"message":"101","line":17,"column":9,"nodeType":"81","messageId":"82","endLine":17,"endColumn":23},{"ruleId":"79","severity":1,"message":"98","line":18,"column":9,"nodeType":"81","messageId":"82","endLine":18,"endColumn":17},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'Test' is defined but never used.","Identifier","unusedVar","'Month' is defined but never used.","'selectedMonth' is assigned a value but never used.","'setSelectedMonth' is assigned a value but never used.","'listMeses' is assigned a value but never used.","'day' is assigned a value but never used.","'setSelectedYear' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'paddingDays' is assigned a value but never used.","'daysInMonth' is assigned a value but never used.","'currentDay' is assigned a value but never used.","'lastDayOfPrevMonth' is assigned a value but never used.","'dayNames' is assigned a value but never used.","'useContext' is defined but never used.","'DataContext' is defined but never used.","'lastDayOfMonth' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]