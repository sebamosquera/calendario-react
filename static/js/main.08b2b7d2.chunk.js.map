{"version":3,"sources":["Context/DataContext.js","Day/Day.js","Month/Month.js","Year/Year.js","Main/Main.js","Nav/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["dayNumbers","dayNames","meses","DataContext","createContext","DataProvider","children","dt","Date","currentDay","getDay","getDate","month","getMonth","year","getFullYear","firstDayOfMonth","daysInMonth","dateString","toLocaleDateString","weekday","day","paddingDays","indexOf","split","toUpperCase","useState","selectedMonth","setSelectedMonth","selectedDay","setSelectedDay","display","setDisplay","Provider","value","changeMonth","number","currentMonth","Day","props","useContext","hora","className","miniatura","Month","listOfDayNames","map","index","listOfDayNumbers","i","dia","id","onClick","console","log","Year","Main","mes","Nav","listMeses","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAEMA,EAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAE/FC,EAAW,CAAC,UAAW,QAAS,SAAU,YAAa,SAC5D,UAAW,UAENC,EAAQ,CAAC,QAAS,UAAW,QAClC,QAAS,OAAQ,QAAS,QAAS,SACnC,aAAc,UAAW,YAAa,aAEjCC,EAAcC,wBAAc,IAE5BC,EAAe,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEfC,EAAK,IAAIC,KAGTC,GADMF,EAAGG,SACIH,EAAGI,WAChBC,EAAQL,EAAGM,WACXC,EAAOP,EAAGQ,cAEVC,EAAkB,IAAIR,KAAKM,EAAMF,EAAO,GACxCK,EAAc,IAAIT,KAAKM,EAAMF,EAAQ,EAAG,GAAGD,UAE3CO,EAAaF,EAAgBG,mBAAmB,QAAS,CAC7DC,QAAS,OACTC,IAAK,UACLT,MAAO,UACPE,KAAM,YAGFQ,EAAcrB,EAASsB,QAAQL,EAAWM,MAAM,MAAM,GAAGC,eAnB5B,EAwBSC,mBAASxB,EAAMU,IAxBxB,mBAwB3Be,EAxB2B,KAwBZC,EAxBY,OA0BKF,mBAASjB,GA1Bd,mBA0B3BoB,EA1B2B,KA0BdC,EA1Bc,OA6BHJ,mBAAS,OA7BN,mBA6B3BK,EA7B2B,KA6BlBC,EA7BkB,KA+CnC,OACE,cAAC7B,EAAY8B,SAAb,CAAsBC,MAAO,CAC3BlC,aACAC,WACAC,QACAyB,gBACAC,mBACAE,iBACAD,cACAM,YAzBgB,SAACC,GACnB,IAAIC,EAAenC,EAAMqB,QAAQI,GACjC,OAAQU,GACN,KAAK,EACYT,EAAJ,IAAXQ,EAAgClC,EAAM,GAAuBA,EAAM,KACnE,MACF,KAAK,GACY0B,EAAJ,IAAXQ,EAAgClC,EAAM,GAAuBA,EAAM,KACnE,MACF,QACE0B,EAAiB1B,EAAMmC,EAAeD,MAgBxCL,UACAC,aACAV,cACAL,cACAR,cAbF,SAeGH,KCvDQgC,EAjBH,SAACC,GAAW,IAAD,EAEaC,qBAAWrC,GAAxBF,GAFA,EAEb4B,YAFa,EAEA5B,UAEjBwC,EAAO,IAAIjC,KAGf,OACE,qBAAKkC,UAAU,UAAf,UACuB,IAApBH,EAAMI,UACL,gCAAK,6BAAKJ,EAAML,QAAW,4CAC3B,0CAAajC,EAASwC,EAAK/B,UAAY,IAAM+B,EAAK9B,gBC4C3CiC,G,MAtDD,WAAO,IAAD,EAEqIJ,qBAAWrC,GAA1J2B,EAFU,EAEVA,eAAgBE,EAFN,EAEMA,WAAYhC,EAFlB,EAEkBA,WAAYC,EAF9B,EAE8BA,SAAiB0B,GAF/C,EAEwCzB,MAFxC,EAE+CyB,eAAiCQ,GAFhF,EAE8DP,iBAF9D,EAEgFO,aAAab,EAF7F,EAE6FA,YAA0Bb,GAFvH,EAE0GQ,YAF1G,EAEuHR,YAEnIoC,EAAiB5C,EAAS6C,KAAI,SAACzB,EAAK0B,GAAN,OAClC,oBACEL,UAAU,WAEVR,MAAOb,EAHT,SAIGA,GAFI0B,MAMHC,EAAmBhD,EAAW8C,KAAI,SAACzB,EAAK4B,GAE5C,IAAIC,GADJD,GAAK,GACS3B,EACd,OAAO2B,EAAI3B,EACT,qBACIoB,UAAU,YACVS,GAAID,IAAQzC,EAAY,aAAe,KAEvCyB,MAAOgB,EACPE,QAAS,WAAOtB,EAAeoB,GAAMlB,EAAW,QALpD,SAMI,cAAC,EAAD,CAAKE,MAAOgB,EAAKP,WAAW,KAHvBM,GAKT,qBACEP,UAAU,oBAEVR,MAAOgB,EACPE,QAAS,WAAOtB,EAAeoB,GAAMlB,EAAW,QAJlD,SAKE,cAAC,EAAD,CAAKE,MAAOgB,EAAKP,WAAW,KAHvBM,MASX,OAFAI,QAAQC,IAAIN,GAGV,sBAAKN,UAAU,kBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sCACA,wBAAQU,QAAS,kBAAMjB,GAAa,IAApC,SAAyC,MACzC,6BAAKR,IACL,wBAAQyB,QAAS,kBAAMjB,EAAY,IAAnC,SAAwC,SAE1C,uBAAMO,UAAU,aAAhB,UACE,oBAAIA,UAAU,WAAd,SACGG,IAEH,qBAAKH,UAAU,uBAAf,SAAuCM,YC1ChCO,EAPF,WAEX,OACE,6DC6BWC,EA5BF,WAAO,IAAD,EAE2ChB,qBAAWrC,GAA/D4B,EAFS,EAETA,QAAS7B,EAFA,EAEAA,MAFA,EAEOyB,cAFP,EAEsBC,iBAErB1B,EAAM4C,KAAI,SAACW,EAAKV,GAAN,OAC1B,qBAAKL,UAAU,QAAf,SAAoCe,GAARV,MAQ9B,OACE,sBAAOL,UAAU,WAAjB,SASe,QAAZX,EAAoB,cAAC,EAAD,IAAwB,QAAZA,EAAoB,cAAC,EAAD,IAAU,cAAC,EAAD,OCGtD2B,G,MA5BH,WAAO,IAAD,EAEgClB,qBAAWrC,GAAnD6B,EAFQ,EAERA,WAAY9B,EAFJ,EAEIA,MAAO0B,EAFX,EAEWA,iBAErB+B,EAAYzD,EAAM4C,KAAI,SAACW,EAAKV,GAAN,OAC1B,oBACEL,UAAU,SACVU,QAAS,WACPxB,EAAiB6B,GACjBzB,EAAW,QAGbE,MAAOuB,EAPT,SAQGA,GAFIV,MAQT,OACA,qBAAKL,UAAU,UAAf,SACE,oBAAIA,UAAU,SAAd,SACGiB,Q,MCTQC,MAbf,WAEE,OACE,qBAAKlB,UAAU,gBAAf,SACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,wBAAQA,UAAU,aAAlB,kBACA,cAAC,EAAD,UCDOmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.08b2b7d2.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\r\n\r\nconst dayNumbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];\r\n\r\nconst dayNames = ['DOMINGO', 'LUNES', 'MARTES', 'MIERCOLES', 'JUEVES',\r\n 'VIERNES', 'SABADO']\r\n\r\nconst meses = ['ENERO', 'FEBRERO', 'MARZO',\r\n 'ABRIL', 'MAYO', 'JUNIO', 'JULIO', 'AGOSTO',\r\n 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE'];\r\n\r\nconst DataContext = createContext({});\r\n\r\nconst DataProvider = ({children}) => {\r\n\r\n  const dt = new Date();\r\n\r\n  const day = dt.getDay(); // indice de dia semanal\r\n  const currentDay = dt.getDate(); // numero del mes\r\n  const month = dt.getMonth();\r\n  const year = dt.getFullYear();\r\n\r\n  const firstDayOfMonth = new Date(year, month, 1);\r\n  const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n\r\n  const dateString = firstDayOfMonth.toLocaleDateString('es-ar', {\r\n    weekday: 'long',\r\n    day: 'numeric',\r\n    month: 'numeric',\r\n    year: 'numeric'\r\n  });\r\n\r\n  const paddingDays = dayNames.indexOf(dateString.split(', ')[0].toUpperCase());\r\n\r\n  // console.log(daysInMonth, month);\r\n  // console.log(day, month, year);\r\n\r\n  const [ selectedMonth, setSelectedMonth ] = useState(meses[month]);\r\n  // selectedMonth se inicia con todos los meses\r\n  const [ selectedDay, setSelectedDay ] = useState(currentDay);\r\n  // selectedDay se inicia con el dia actual\r\n\r\n  const [ display, setDisplay ] = useState('mes');\r\n\r\n  const changeMonth = (number) => {\r\n    let currentMonth = meses.indexOf(selectedMonth);\r\n    switch (currentMonth) {\r\n      case 0:\r\n        number === 1 ? setSelectedMonth(meses[1]) : setSelectedMonth(meses[11]);\r\n        break;\r\n      case 11:\r\n        number === 1 ? setSelectedMonth(meses[0]) : setSelectedMonth(meses[10]);\r\n        break;\r\n      default:\r\n        setSelectedMonth(meses[currentMonth + number]);\r\n        break;\r\n    }\r\n    // function that when a next or previous button is clicked it changes the current selectedMonth\r\n  }\r\n\r\n  return (\r\n    <DataContext.Provider value={{\r\n      dayNumbers,\r\n      dayNames,\r\n      meses,\r\n      selectedMonth,\r\n      setSelectedMonth,\r\n      setSelectedDay,\r\n      selectedDay,\r\n      changeMonth,\r\n      display,\r\n      setDisplay,\r\n      paddingDays,\r\n      daysInMonth,\r\n      currentDay\r\n    }}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nexport {\r\n  DataContext,\r\n  DataProvider\r\n}\r\n","// import './day.css';\r\nimport React, { useContext, useState} from 'react';\r\nimport { DataContext } from '../Context/DataContext';\r\n\r\nconst Day = (props) => {\r\n\r\n  const { selectedDay, dayNames } = useContext(DataContext)\r\n\r\n  var hora = new Date();\r\n\r\n\r\n  return (\r\n    <div className='day-div'>\r\n      {props.miniatura === true ?\r\n        <div><h1>{props.value}</h1><div>TAREAS</div></div> :\r\n        <div>FECHA: {dayNames[hora.getDay()] + ' ' + hora.getDate()}</div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Day;\r\n","import './month.css';\r\nimport React, { useContext, useState} from 'react';\r\nimport { DataContext } from '../Context/DataContext';\r\nimport Day from '../Day/Day';\r\n\r\nconst Month = () => {\r\n\r\n  const { setSelectedDay, setDisplay, dayNumbers, dayNames, meses, selectedMonth, setSelectedMonth, changeMonth, paddingDays, daysInMonth, currentDay} = useContext(DataContext);\r\n\r\n  const listOfDayNames = dayNames.map((day, index) =>\r\n    <li\r\n      className='month-li'\r\n      key={index}\r\n      value={day}>\r\n      {day}\r\n    </li>\r\n    );\r\n\r\n  const listOfDayNumbers = dayNumbers.map((day, i) => {\r\n    i += 1;\r\n    let dia = i - paddingDays;\r\n    return i > paddingDays ?\r\n      <div\r\n          className='month-day'\r\n          id={dia === currentDay? 'currentDay' : null}\r\n          key={i}\r\n          value={dia}\r\n          onClick={() => {setSelectedDay(dia); setDisplay('dia')}}>\r\n          <Day value={dia} miniatura={true} />\r\n      </div> :\r\n      <div\r\n        className='month-day padding'\r\n        key={i}\r\n        value={dia}\r\n        onClick={() => {setSelectedDay(dia); setDisplay('dia')}}>\r\n        <Day value={dia} miniatura={true} />\r\n      </div>;\r\n  })\r\n\r\n  console.log(listOfDayNumbers);\r\n\r\n  return (\r\n    <div className='month-container'>\r\n      <nav className='month-nav'>\r\n        <h1>HOME</h1>\r\n        <button onClick={() => changeMonth(-1)}>{'<'}</button>\r\n        <h1>{selectedMonth}</h1>\r\n        <button onClick={() => changeMonth(1)}>{'>'}</button>\r\n      </nav>\r\n      <main className='month-main'>\r\n        <ul className='month-ul'>\r\n          {listOfDayNames}\r\n        </ul>\r\n        <div className='month-days-container'>{listOfDayNumbers}</div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Month;\r\n","// import './year.css';\r\nimport React, { useContext, useState} from 'react';\r\nimport { DataContext } from '../Context/DataContext';\r\n\r\nconst Year = () => {\r\n\r\n  return (\r\n    <div>Hello from Year component</div>\r\n  );\r\n}\r\n\r\nexport default Year;\r\n","import React, { useContext } from 'react';\r\n// import { BrowserWeb as Router, Route } from 'react-router-dom';\r\nimport './main.css';\r\nimport { DataContext } from '../Context/DataContext';\r\nimport Day from '../Day/Day';\r\nimport Month from '../Month/Month';\r\nimport Year from '../Year/Year';\r\n\r\nconst Main = () => {\r\n\r\n  const { display, meses, selectedMonth, setSelectedMonth } = useContext(DataContext)\r\n\r\n  const listMeses = meses.map((mes, index) =>\r\n    <div className='month' key={index}>{mes}</div>\r\n   );\r\n\r\n  /*const changeMonth = (action) => {\r\n    console.log(action);\r\n  }*/\r\n//  listMeses.map(div => console.log(div.props.children));\r\n\r\n  return (\r\n    <main  className=\"app-main\">\r\n\r\n      {/*<Router>\r\n        <Route path='/' exact component={Month} />\r\n        <Route path='/day' exact component={Day} />\r\n      </Router>*/}\r\n      {/*  <button className='button home-button' onClick={() => setSelectedMonth([...meses])}>Home</button>\r\n      //  <button className='button next-button' value='next' onClick={() => changeMonth('next')}>Next</button>\r\n      //  <div className='months-container'>{listMeses}</div>*/}\r\n      {display === 'mes' ? <Month /> : display === 'dia' ? <Day /> : <Year />}\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;\r\n","import React, { useContext } from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport './nav.css';\r\nimport { DataContext } from '../Context/DataContext';\r\nimport Month from '../Month/Month';\r\n\r\nconst Nav = () => {\r\n\r\n  const { setDisplay, meses, setSelectedMonth } = useContext(DataContext);\r\n\r\n  const listMeses = meses.map((mes, index) =>\r\n    <li\r\n      className='nav-li'\r\n      onClick={() => {\r\n        setSelectedMonth(mes);\r\n        setDisplay('mes')\r\n      }}\r\n      key={index}\r\n      value={mes}>\r\n      {mes}\r\n    </li>\r\n    );\r\n  // lista de meses que siempre lleva todos los meses, onclick actualiza el selectedMonths\r\n\r\n\r\n  return (\r\n  <nav className='app-nav'>\r\n    <ul className='nav-ul'>\r\n      {listMeses}\r\n    </ul>\r\n  </nav>\r\n)\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\nimport Main from './Main/Main';\nimport Nav from './Nav/Nav';\nimport './App.css';\nimport { DataProvider } from './Context/DataContext';\n\nfunction App() {\n\n  return (\n    <div className=\"app-container\">\n      <DataProvider>\n        <Nav />\n        <header className=\"app-header\">2020</header>\n        <Main />\n      </DataProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}